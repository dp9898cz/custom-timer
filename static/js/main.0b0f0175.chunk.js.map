{"version":3,"sources":["save.svg","App.js","index.js"],"names":["useStickyState","defaultValue","key","useState","stickyValue","window","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","App","Date","now","date","setDate","eventDate","setEventDate","eventName","setEventName","interval","setInterval","clearInterval","formatNumber","number","className","EventText","Timer","TimerSection","Math","floor","NumberText","InputField","Name","id","placeholder","maxLength","DateInput","type","onClick","nameElement","document","getElementById","dateElement","name","dateValue","newDate","r","style","border","setTimeout","isNaN","src","SaveIcon","alt","styled","div","Number","ReactDOM","render","StrictMode"],"mappings":"gOAAe,MAA0B,iC,OCUzC,SAASA,EAAeC,EAAcC,GAClC,MAA0BC,oBAAS,WAC/B,IAAMC,EAAcC,OAAOC,aAAaC,QAAQL,GAChD,OAAuB,OAAhBE,EAAuBI,KAAKC,MAAML,GAAeH,KAF5D,mBAAOS,EAAP,KAAcC,EAAd,KAOA,OAHAC,qBAAU,WACNP,OAAOC,aAAaO,QAAQX,EAAKM,KAAKM,UAAUJ,MACjD,CAACR,EAAKQ,IACF,CAACA,EAAOC,GAoGJI,MAjGf,WACI,MAAwBZ,mBAASa,KAAKC,OAAtC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCnB,EAAegB,KAAKP,MAAM,eAA5D,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAAkCrB,EAAe,YAAa,aAA9D,mBAAOsB,EAAP,KAAkBC,EAAlB,KAEAX,qBAAU,WACN,IAAMY,EAAWC,aAAY,kBAAMN,EAAQH,KAAKC,SAAQ,KACxD,OAAO,kBAAMS,cAAcF,MAC5B,IAEH,IAAMG,EAAe,SAACC,GAAD,OAAaA,EAAS,GAAK,IAAMA,EAASA,GA+C/D,OACI,sBAAKC,UAAU,MAAf,UACI,cAACC,EAAD,UAAYR,IACZ,eAACS,EAAD,WACI,eAACC,EAAD,WACI,cAAC,EAAD,UAjDZZ,EAAYF,EACNe,KAAKC,OAAOd,EAAYF,GAAQ,IAAO,KAAO,IAC9C,MAgDM,cAACiB,EAAD,sBAEJ,eAACH,EAAD,WACI,cAAC,EAAD,UAjDZZ,EAAYF,EACNS,EAAaM,KAAKC,OAAQd,EAAYF,GAAQ,IAAO,KAAQ,KAC7D,OAgDM,cAACiB,EAAD,uBAEJ,eAACH,EAAD,WACI,cAAC,EAAD,UAjDZZ,EAAYF,EACNS,EAAaM,KAAKC,OAAQd,EAAYF,GAAQ,IAAO,GAAM,KAC3D,OAgDM,cAACiB,EAAD,yBAEJ,eAACH,EAAD,WACI,cAAC,EAAD,UAjDZZ,EAAYF,EACNS,EAAaM,KAAKC,OAAQd,EAAYF,GAAQ,IAAQ,KACtD,OAgDM,cAACiB,EAAD,4BAGR,eAACC,EAAD,WACI,cAACC,EAAD,UACI,uBACIC,GAAG,YACHC,YAAY,aACZC,UAAU,SAGlB,cAACC,EAAD,UACI,uBAAOH,GAAG,YAAYI,KAAK,qBAE/B,wBAAQC,QA5DD,WACf,IAAMC,EAAcC,SAASC,eAAe,aACtCC,EAAcF,SAASC,eAAe,aACtCE,EAAOJ,EAAYlC,MACnBuC,EAAYF,EAAYrC,MACxBwC,EAAUlC,KAAKP,MAAMwC,GACvBE,GAAI,EACK,KAATH,IACAJ,EAAYQ,MAAMC,OAAS,gBAC3BC,YAAW,WACPV,EAAYQ,MAAMC,OAAS,oBAC5B,KACHF,GAAI,IAEJI,MAAML,IAAYA,GAAWhC,KAC7B6B,EAAYK,MAAMC,OAAS,gBAC3BC,YAAW,WACPP,EAAYK,MAAMC,OAAS,oBAC5B,KACHF,GAAI,GAEJA,IACJ9B,EAAa6B,GACb3B,EAAayB,GACbD,EAAYrC,MAAQ,KACpBkC,EAAYlC,MAAQ,OAmCZ,SACI,qBAAK8C,IAAKC,EAAUC,IAAI,kBAStC5B,EAAY6B,IAAOC,IAAV,6FAMT7B,EAAQ4B,IAAOC,IAAV,4JAQL5B,EAAe2B,IAAOC,IAAV,+JAQZC,EAASF,IAAOC,IAAV,kDAINzB,EAAawB,IAAOC,IAAV,oDAIVxB,EAAauB,IAAOC,IAAV,mYAmBVvB,EAAOsB,IAAOC,IAAV,8aAoBJnB,EAAYkB,IAAOC,IAAV,quBCxLfE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,W","file":"static/js/main.0b0f0175.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/save.6e28cebf.svg\";","import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport SaveIcon from \"./save.svg\";\n\n/**\n * Store some information to local storage (browser storage)\n * @param {*} defaultValue Value to store\n * @param {String} key Name of the variable\n * @source https://www.joshwcomeau.com/react/persisting-react-state-in-localstorage/\n */\nfunction useStickyState(defaultValue, key) {\n    const [value, setValue] = useState(() => {\n        const stickyValue = window.localStorage.getItem(key);\n        return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n    });\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n    return [value, setValue];\n}\n\nfunction App() {\n    const [date, setDate] = useState(Date.now());\n    const [eventDate, setEventDate] = useStickyState(Date.parse(\"1 Jan 2025\"));\n    const [eventName, setEventName] = useStickyState(\"Year 2025\", \"eventName\");\n\n    useEffect(() => {\n        const interval = setInterval(() => setDate(Date.now()), 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    const formatNumber = (number) => (number < 10 ? \"0\" + number : number);\n\n    const getDays = () =>\n        eventDate > date\n            ? Math.floor((eventDate - date) / 1000 / 3600 / 24)\n            : \"0\";\n    const getHours = () =>\n        eventDate > date\n            ? formatNumber(Math.floor(((eventDate - date) / 1000 / 3600) % 24))\n            : \"00\";\n    const getMinutes = () =>\n        eventDate > date\n            ? formatNumber(Math.floor(((eventDate - date) / 1000 / 60) % 60))\n            : \"00\";\n    const getSeconds = () =>\n        eventDate > date\n            ? formatNumber(Math.floor(((eventDate - date) / 1000) % 60))\n            : \"00\";\n\n    const dateChange = () => {\n        const nameElement = document.getElementById(\"eventName\");\n        const dateElement = document.getElementById(\"eventDate\");\n        const name = nameElement.value;\n        const dateValue = dateElement.value;\n        const newDate = Date.parse(dateValue);\n        var r = false;\n        if (name === \"\") {\n            nameElement.style.border = \"1px solid red\";\n            setTimeout(() => {\n                nameElement.style.border = \"1px solid white\";\n            }, 600);\n            r = true;\n        }\n        if (isNaN(newDate) || newDate <= date) {\n            dateElement.style.border = \"1px solid red\";\n            setTimeout(() => {\n                dateElement.style.border = \"1px solid white\";\n            }, 600);\n            r = true;\n        }\n        if (r) return;\n        setEventDate(newDate);\n        setEventName(name);\n        dateElement.value = null;\n        nameElement.value = null;\n    };\n\n    return (\n        <div className=\"App\">\n            <EventText>{eventName}</EventText>\n            <Timer>\n                <TimerSection>\n                    <Number>{getDays()}</Number>\n                    <NumberText>days</NumberText>\n                </TimerSection>\n                <TimerSection>\n                    <Number>{getHours()}</Number>\n                    <NumberText>hours</NumberText>\n                </TimerSection>\n                <TimerSection>\n                    <Number>{getMinutes()}</Number>\n                    <NumberText>minutes</NumberText>\n                </TimerSection>\n                <TimerSection>\n                    <Number>{getSeconds()}</Number>\n                    <NumberText>seconds</NumberText>\n                </TimerSection>\n            </Timer>\n            <InputField>\n                <Name>\n                    <input\n                        id=\"eventName\"\n                        placeholder=\"Event name\"\n                        maxLength=\"18\"\n                    />\n                </Name>\n                <DateInput>\n                    <input id=\"eventDate\" type=\"datetime-local\" />\n                </DateInput>\n                <button onClick={dateChange}>\n                    <img src={SaveIcon} alt=\"Save\"/>\n                </button>\n            </InputField>\n        </div>\n    );\n}\n\nexport default App;\n\nconst EventText = styled.div`\n    display: flex;\n    font-weight: 500;\n    font-size: 4rem;\n`;\n\nconst Timer = styled.div`\n    margin-top: 1rem;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`;\n\nconst TimerSection = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 0rem 1.8rem;\n`;\n\nconst Number = styled.div`\n    font-size: 5rem;\n`;\n\nconst NumberText = styled.div`\n    font-size: 1.5rem;\n`;\n\nconst InputField = styled.div`\n    margin-top: 16rem;\n    display: flex;\n    button {\n        background: none;\n        outline: none;\n        border: none;\n        margin-left: 1rem;\n        color: white;\n        cursor: pointer;\n        img {\n            width: 3rem;\n            height: 3rem;\n        }\n        :active {\n            filter: invert(0.3);\n        }\n    }\n`;\nconst Name = styled.div`\n    input {\n        background: none;\n        border: 1px solid white;\n        border-radius: 7px;\n        padding: 0.6rem;\n        width: 13rem;\n        outline: none;\n        color: white;\n        font-size: 1.2rem;\n        height: 3rem;\n        cursor: pointer;\n        margin-right: 1rem;\n        ::placeholder {\n            color: white;\n            opacity: 0.5;\n        }\n    }\n`;\n\nconst DateInput = styled.div`\n    input {\n        background: none;\n        color: white;\n        border: 1px solid white;\n        border-radius: 7px;\n        font-size: 1.2rem;\n        width: 16.5rem;\n        height: 3rem;\n        outline: none;\n        padding: 0.6rem;\n        ::-webkit-calendar-picker-indicator {\n            filter: invert(1);\n        }\n        ::-webkit-datetime-edit-day-field:focus,\n        ::-webkit-datetime-edit-month-field:focus,\n        ::-webkit-datetime-edit-hour-field:focus,\n        ::-webkit-datetime-edit-minute-field:focus,\n        ::-webkit-datetime-edit-year-field:focus {\n            background-color: #bfa8a6;\n            color: white;\n            outline: none;\n        }\n    }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}